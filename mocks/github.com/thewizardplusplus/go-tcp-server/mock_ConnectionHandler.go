// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package tcpServerMocks

import (
	"context"
	"net"

	mock "github.com/stretchr/testify/mock"
)

// NewMockConnectionHandler creates a new instance of MockConnectionHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockConnectionHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockConnectionHandler {
	mock := &MockConnectionHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockConnectionHandler is an autogenerated mock type for the ConnectionHandler type
type MockConnectionHandler struct {
	mock.Mock
}

type MockConnectionHandler_Expecter struct {
	mock *mock.Mock
}

func (_m *MockConnectionHandler) EXPECT() *MockConnectionHandler_Expecter {
	return &MockConnectionHandler_Expecter{mock: &_m.Mock}
}

// HandleConnection provides a mock function for the type MockConnectionHandler
func (_mock *MockConnectionHandler) HandleConnection(ctx context.Context, connection net.Conn) error {
	ret := _mock.Called(ctx, connection)

	if len(ret) == 0 {
		panic("no return value specified for HandleConnection")
	}

	var r0 error
	if returnFunc, ok := ret.Get(0).(func(context.Context, net.Conn) error); ok {
		r0 = returnFunc(ctx, connection)
	} else {
		r0 = ret.Error(0)
	}
	return r0
}

// MockConnectionHandler_HandleConnection_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'HandleConnection'
type MockConnectionHandler_HandleConnection_Call struct {
	*mock.Call
}

// HandleConnection is a helper method to define mock.On call
//   - ctx
//   - connection
func (_e *MockConnectionHandler_Expecter) HandleConnection(ctx interface{}, connection interface{}) *MockConnectionHandler_HandleConnection_Call {
	return &MockConnectionHandler_HandleConnection_Call{Call: _e.mock.On("HandleConnection", ctx, connection)}
}

func (_c *MockConnectionHandler_HandleConnection_Call) Run(run func(ctx context.Context, connection net.Conn)) *MockConnectionHandler_HandleConnection_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(net.Conn))
	})
	return _c
}

func (_c *MockConnectionHandler_HandleConnection_Call) Return(err error) *MockConnectionHandler_HandleConnection_Call {
	_c.Call.Return(err)
	return _c
}

func (_c *MockConnectionHandler_HandleConnection_Call) RunAndReturn(run func(ctx context.Context, connection net.Conn) error) *MockConnectionHandler_HandleConnection_Call {
	_c.Call.Return(run)
	return _c
}
